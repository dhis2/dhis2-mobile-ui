name: Continuous deployment

env:
  main_project_module: android

on:
  push:
    branches:
      - develop # Automatically generates snapshot versions

  workflow_dispatch: ## manually generates release versions
    inputs:
      release_version:
        description: 'please, enter the release version'
        required: true
        type: string

jobs:
  #  publish:
  #    # The type of runner that the job will run on
  #    runs-on: ubuntu-latest
  #
  #    # Steps represent a sequence of tasks that will be executed as part of the job
  #    steps:
  #      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #      - uses: actions/checkout@v3
  #
  #      - name: Set Up JDK
  #        uses: actions/setup-java@v3
  #        with:
  #          distribution: 'zulu' # See 'Supported distributions' for available options
  #          java-version: '17'
  #          cache: 'gradle'
  #
  #      - name: Change wrapper permissions
  #        run: chmod +x ./gradlew
  #
  #      # Create publish to maven
  #      - name: Publish to maven
  #        run: ./.github/workflows/scripts/publish-maven.sh
  #        env:
  #          OSSRH_USERNAME: ${{ secrets.SONATYPE_OSSRH_USERNAME }}
  #          OSSRH_PASSWORD: ${{ secrets.SONATYPE_OSSRH_PASSWORD }}
  #          SIGNING_PRIVATE_KEY: ${{ secrets.PGP_PRIVATE_KEY }}
  #          SIGNING_PASSWORD: ${{ secrets.PGP_PASSPHRASE }}

  create_artifacts:
    runs-on: ubuntu-latest
    if: ${{ (inputs.release_version) && (inputs.release_version != '') }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./gradlew assembleDebug

      # Create desktop JAR for each OS
      - name: Create desktop jar for ${{ matrix.os }}
        run: ./gradlew packageUberJarForCurrentOS

      # Upload the artifacts for each OS
      - name: Upload APK (if Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/android-debug.apk

      - name: Upload Desktop JAR
        uses: actions/upload-artifact@v3
        with:
          name: desktop-jar-${{ matrix.os }}
          path: desktop/build/compose/jars/*-${{ matrix.os }}-*.jar

  # Job to create GitHub Release and upload artifacts
  github_release:
    runs-on: ubuntu-latest
    needs: create_artifacts
    steps:
      - name: Download APK and JARs from all OSes
        uses: actions/download-artifact@v3
        with:
          name: '*'

      - name: Github Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          generateReleaseNotes: true
          name: "Mobile Design system for DHIS 2 (v${{ inputs.release_version }})"
          tag: ${{ inputs.release_version }}
          artifacts: |
            android-apk/*.apk,
            desktop-jar-windows-latest/*.jar,
            desktop-jar-ubuntu-latest/*.jar,
            desktop-jar-macos-latest/*.jar