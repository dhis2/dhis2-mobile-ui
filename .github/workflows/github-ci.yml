name: Continuous Integration

env:
  # The name of the main module repository
  main_project_module: android

on:
  push:
    branches:
     - main
     - develop
     - release/*
  pull_request:
    branches:
     - main
     - develop
     - release/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run check style
      - name: Kotlin checkstyle
        run: ./gradlew ktlintCheck

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew desktopTest

      # Run Screenshot Tests
      - name: Run screenshot tests
        run: ./gradlew designsystem:verifyPaparazziDebug

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

  deployment_job:
    runs-on: windows-latest
    needs: ci_job
    if: github.event_name == 'pull_request' && needs.ci_job.result == 'success'
    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Upload Artifact Build
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.repository_name }} - Android APK
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/android-debug.apk

      #Create binaries
      - name: Create desktop jar for Windows
        run: ./gradlew packageUberJarForCurrentOS

      #Upload binaries artifact
      - name: Upload Desktop artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.repository_name }} - Desktop jar - Windows
          path: ${{ github.workspace }}/desktop/build/compose/jars/mobile-ui-windows-x64-1.0.0.jar
